$date
	Wed Apr 21 10:07:49 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module adder_ripple_tp $end
$var wire 4 ! q [3:0] $end
$var reg 4 " a [3:0] $end
$var reg 4 # b [3:0] $end
$scope module adder_ripple $end
$var wire 4 $ a [3:0] $end
$var wire 4 % b [3:0] $end
$var wire 4 & q [3:0] $end
$var wire 4 ' cout [3:0] $end
$scope module add0 $end
$var wire 1 ( A $end
$var wire 1 ) B $end
$var wire 1 * CIN $end
$var wire 1 + COUT $end
$var wire 1 , Q $end
$upscope $end
$scope module add1 $end
$var wire 1 - A $end
$var wire 1 . B $end
$var wire 1 / CIN $end
$var wire 1 0 COUT $end
$var wire 1 1 Q $end
$upscope $end
$scope module add2 $end
$var wire 1 2 A $end
$var wire 1 3 B $end
$var wire 1 4 CIN $end
$var wire 1 5 COUT $end
$var wire 1 6 Q $end
$upscope $end
$scope module add3 $end
$var wire 1 7 A $end
$var wire 1 8 B $end
$var wire 1 9 CIN $end
$var wire 1 : COUT $end
$var wire 1 ; Q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#100000
b1 !
b1 &
1,
1)
b1 #
b1 %
#200000
11
1/
b1 '
1+
b10 !
b10 &
0,
1(
b1 "
b1 $
#300000
06
0/
04
0+
b0 '
00
1,
b11 !
b11 &
11
0)
1.
b10 #
b10 %
#400000
16
1;
1/
14
19
1+
10
15
b1111 '
1:
0,
b1110 !
b1110 &
11
1)
13
18
1-
12
17
b1111 #
b1111 %
b1111 "
b1111 $
#500000
