$date
	Wed Apr 21 10:12:42 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module adder_ripple2_tp $end
$var wire 4 ! q [3:0] $end
$var reg 4 " a [3:0] $end
$var reg 4 # b [3:0] $end
$scope module adder_ripple2 $end
$var wire 4 $ a [3:0] $end
$var wire 4 % b [3:0] $end
$var wire 4 & q [3:0] $end
$var wire 4 ' cout [3:0] $end
$scope module add0 $end
$var wire 1 ( A $end
$var wire 1 ) B $end
$var wire 1 * CIN $end
$var wire 1 + COUT $end
$var wire 1 , Q $end
$upscope $end
$scope module add1 $end
$var wire 1 - A $end
$var wire 1 . B $end
$var wire 1 / CIN $end
$var wire 1 0 COUT $end
$var wire 1 1 Q $end
$upscope $end
$scope module add2 $end
$var wire 1 2 A $end
$var wire 1 3 B $end
$var wire 1 4 CIN $end
$var wire 1 5 COUT $end
$var wire 1 6 Q $end
$upscope $end
$scope module add3 $end
$var wire 1 7 A $end
$var wire 1 8 B $end
$var wire 1 9 CIN $end
$var wire 1 : COUT $end
$var wire 1 ; Q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#100000
b10 !
b10 &
11
1/
b1 '
1+
1)
1(
b1 #
b1 %
b1 "
b1 $
#200000
01
0/
b100 !
b100 &
16
0+
14
b10 '
10
0)
1.
0(
1-
b10 #
b10 %
b10 "
b10 $
#300000
b110 !
b110 &
11
1/
b11 '
1+
1)
1(
b11 #
b11 %
b11 "
b11 $
#400000
b1110 !
b1110 &
1;
19
1:
b1111 '
15
13
18
12
17
b1111 #
b1111 %
b1111 "
b1111 $
#500000
